<launch>
  <arg name="paused" default="false"/>
  <arg name="rviz" default="false"/>
  <arg name="rqt" default="false"/>
  <arg name="world_location" default="$(find cylbot_gazebo)"/>
  <arg name="world_name" default="cylbot"/>
  <arg name="static_spin" default="true"/>
  <arg name="spin_rate" default="0.0"/>
  <arg name="static_tilt" default="true"/>
  <arg name="tilt_angle" default="0.0"/>
  <arg name="static_pan" default="true"/>
  <arg name="pan_angle" default="0.0"/>
  <arg name="use_map" default="true"/>
  <arg name="use_localization" default="true"/>
  <arg name="3d_map" default="false"/>

  <!-- Load the URDF into the robot_description param. This is required for RVIZ and other tools to function -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find cylbot_description)/robots/cylbot.urdf.xacro'" />

  <group if="$(arg use_map)">
	<group unless="$(arg 3d_map)">
	  <node name="map_server" pkg="map_server" type="map_server" args="$(arg world_location)/maps/$(arg world_name)_map.yaml" output="screen"/>
	  <node name="likelihood_field_server" pkg="cylbot_map_creator" type="likelihood_field_server">
		<param name="field_file" type="string" value="$(arg world_location)/likelihoods/$(arg world_name)_likelihood.yaml"/>
	  </node>
	  <node name="likelihood_field_as_map" pkg="cylbot_map_creator" type="publish_likelihood_field_as_map">
		<param name="params_file" type="string" value="$(find multisense_sensor_model)/params/sensor_params_large_sigma.yaml"/>
	  </node>

	  <group if="$(arg use_localization)">
		<node name="localization_2d" pkg="cylbot_mcl" type="localization_2d"/>
	  </group>

	</group>
	<group if="$(arg 3d_map)">
	  <node name="octomap_server" pkg="octomap_server" type="octomap_server_node" args="$(arg world_location)/octomaps/$(arg world_name)_octomap.bt"/>

	  <group if="$(arg use_localization)">
		<node name="localization_3d" pkg="cylbot_mcl" type="localization_3d"/>
	  </group>

	</group>
  </group>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_location)/worlds/$(arg world_name).world"/>
	<arg name="verbose" value="1"/>
	<arg name="paused" value="$(arg paused)"/>
    <!-- more default parameters can be changed here -->
  </include>

  <include file="$(find cylbot_gazebo)/launch/multisense_sl.launch"/>

  <include file="$(find cylbot_control)/launch/cylbot_control.launch"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <!-- publish a static tf for the caster wheel. This is just to make ROS happy -->
  <node name="caster_z_tf" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link front_caster_holder 50" />
  <node name="caster_holder" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 front_caster_holder front_caster 50" />

  <!-- publish a static tf from the true_odom to the map -->
  <node name="map_to_true_odom" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map true_odom 50"/>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model cylbot -z .4" />

  <group if="$(arg rviz)">
	<node name="rviz" pkg="rviz" type="rviz" />
  </group>

  <group if="$(arg rqt)">
	<node name="rqt" pkg="rqt" type="rqt" />
  </group>

  <group if="$(arg static_spin)">
	<node name="spin_pub" pkg="rostopic" type="rostopic" args="pub /multisense/set_spindle_speed std_msgs/Float64 '{data: $(arg spin_rate)}'"/>
  </group>

  <group if="$(arg static_tilt)">
		<node name="tilt_pub" pkg="rostopic" type="rostopic" args="pub /cylbot/head_tilt_position_controller/command std_msgs/Float64 '{data: $(arg tilt_angle)}'"/>
  </group>

  <group if="$(arg static_pan)">
	<node name="pan_pub" pkg="rostopic" type="rostopic" args="pub /cylbot/head_pan_position_controller/command std_msgs/Float64 '{data: $(arg pan_angle)}'"/>
  </group>
</launch>
